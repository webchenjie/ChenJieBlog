(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{685:function(t,e,r){"use strict";r.r(e);var v=r(11),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"_1-大纲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-大纲"}},[t._v("#")]),t._v(" 1. 大纲")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("effect")]),t._v(" "),r("ul",[r("li",[t._v("数据结构（WeakMap）")]),t._v(" "),r("li",[t._v("依赖收集（getter）")]),t._v(" "),r("li",[t._v("依赖触发（setter）")])])]),t._v(" "),r("li",[r("p",[t._v("reactive")]),t._v(" "),r("ul",[r("li",[t._v("proxy")])])]),t._v(" "),r("li",[r("p",[t._v("ref")]),t._v(" "),r("ul",[r("li",[t._v("getter")]),t._v(" "),r("li",[t._v("setter")])])]),t._v(" "),r("li",[r("p",[t._v("computed")])]),t._v(" "),r("li",[r("p",[t._v("watch")])])]),t._v(" "),r("h2",{attrs:{id:"_2-简述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-简述"}},[t._v("#")]),t._v(" 2. 简述")]),t._v(" "),r("ul",[r("li",[r("p",[t._v("reactive 利用 proxy 创建代理对象，getter 进行依赖收集，setter 进行依赖触发")])]),t._v(" "),r("li",[r("p",[t._v("effect 执行时会创建 ReactiveEffect 实例，里面有 run、stop 等方法，run 方法就是执行传入的 fn 函数，即自定义函数，在执行 fn 时会把当前实例保存在全局变量上即 activeEffect 并且触发 proxy 的 getter 操作从而进行依赖收集， 当改变 proxy 的值时会触发 setter 操作从而执行依赖触发的过程")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);