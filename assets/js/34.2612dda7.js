(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{619:function(t,s,n){"use strict";n.r(s);var p=n(8),h=Object(p.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"默认情况下-https-的网站不能请求或访问-http-的资源-解决方法是"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#默认情况下-https-的网站不能请求或访问-http-的资源-解决方法是"}},[t._v("#")]),t._v(" 默认情况下，https 的网站不能请求或访问 http 的资源，解决方法是：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v('1. 在 html 页面加入 <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">\n   浏览器在解析请求的时候会自动把 http 请求转化为 https 请求\n\n2. 如果在https网站中请求的http资源本身不支持https，可以把https网站换成http协议\n\n3. 如果在https网站中请求的http资源本身不支持https，但是请求的http资源在属于自己的服务上（非第三方服务）\n   并且不考虑改为https协议带来的性能问题，可以把要请求的http资源协议改为https\n\n4. 如果在https网站中请求的http资源本身不支持https，并且这些被请求的http资源都是静态资源（比如js、css等）\n   可以考虑把这些资源下载下来放到现有的https服务器中，也可以寻找https协议的资源，很多免费的cdn服务都同时提供了https和http协议的静态资源\n\n5. 如果在https网站中请求的http资源是动态资源（比如请求http接口），且是第三方接口（自己无法变更这个第三方接口是http协议的事实）\n   可以用nginx代理的方式\n')])])]),n("div",{staticClass:"custom-block tip"},[n("p",[t._v("作者：chenjie "),n("br"),t._v("\n链接：https://webchenjie.cn "),n("br"),t._v("\n来源：ChenJieBlog")])])])}),[],!1,null,null,null);s.default=h.exports}}]);