(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{489:function(v,_,l){"use strict";l.r(_);var i=l(2),a=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"简述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简述"}},[v._v("#")]),v._v(" 简述")]),v._v(" "),_("h3",{attrs:{id:"音视频的应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音视频的应用"}},[v._v("#")]),v._v(" 音视频的应用")]),v._v(" "),_("ul",[_("li",[v._v("互动直播系统，如一对一视频等")]),v._v(" "),_("li",[v._v("娱乐直播系统，如主播等")]),v._v(" "),_("li",[v._v("音视频特效")]),v._v(" "),_("li",[v._v("音视频编辑")])]),v._v(" "),_("h3",{attrs:{id:"常用工具"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用工具"}},[v._v("#")]),v._v(" 常用工具")]),v._v(" "),_("ul",[_("li",[v._v("ffmpeg 对音视频的编码解码，特效处理等")]),v._v(" "),_("li",[v._v("ffplay 基于 ffmpeg，播放器")]),v._v(" "),_("li",[v._v("vlc 依赖于 ffmpeg，播放器，有图形化界面")])]),v._v(" "),_("h3",{attrs:{id:"如何安装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何安装"}},[v._v("#")]),v._v(" 如何安装")]),v._v(" "),_("ul",[_("li",[v._v("Mac 使用命令安装 brew install ffmpeg")]),v._v(" "),_("li",[v._v("Mac/Linux 源码方式安装\n"),_("ul",[_("li",[v._v("下载 ffmpeg，http://ffmpeg.org/download.html")]),v._v(" "),_("li",[v._v("编译 ffmpeg\n"),_("ul",[_("li",[v._v("./configure --prefix=/usr/local/ffmpeg --enable-debug=3 （生成编译脚本，并打开调试模式）")]),v._v(" "),_("li",[v._v("make -j 4 （指定四个进程同时进行编译）")]),v._v(" "),_("li",[v._v("make install（安装）")])])])])]),v._v(" "),_("li",[v._v("Windows 编译方式\n"),_("ul",[_("li",[v._v("Cygwin（Cygnus Windows） 直接安装")]),v._v(" "),_("li",[v._v("MinGW（Minimalist GNU for Windows） + MSYS2（Minimal SYStem2）（推荐）")]),v._v(" "),_("li",[v._v("VS（Visual Studio 2015/2017...） + MSYS2（Minimal SYStem2）")])])])]),v._v(" "),_("h3",{attrs:{id:"音视频处理流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音视频处理流程"}},[v._v("#")]),v._v(" 音视频处理流程")]),v._v(" "),_("ul",[_("li",[v._v("直播客户端的处理流程\n"),_("ul",[_("li",[v._v("音视频采集 ==> 音视频编码 ==> 传输 ==> 音视频解码 ==> 音视频渲染")])])])]),v._v(" "),_("h2",{attrs:{id:"音频"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音频"}},[v._v("#")]),v._v(" 音频")]),v._v(" "),_("h3",{attrs:{id:"声音是如何被听到的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声音是如何被听到的"}},[v._v("#")]),v._v(" 声音是如何被听到的")]),v._v(" "),_("blockquote",[_("p",[v._v("人类听觉范围在：20Hz —— 20kHz 之间")])]),v._v(" "),_("ul",[_("li",[v._v("声音是由物体振动产生的")]),v._v(" "),_("li",[v._v("它可以通过空气、固体、液体等进行传输")]),v._v(" "),_("li",[v._v("振动耳膜")])]),v._v(" "),_("h3",{attrs:{id:"声音三要素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声音三要素"}},[v._v("#")]),v._v(" 声音三要素")]),v._v(" "),_("ul",[_("li",[v._v("音调")]),v._v(" "),_("li",[v._v("音量")]),v._v(" "),_("li",[v._v("音色")])]),v._v(" "),_("h3",{attrs:{id:"模数转换-模拟信号转数字信号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模数转换-模拟信号转数字信号"}},[v._v("#")]),v._v(" 模数转换（模拟信号转数字信号）")]),v._v(" "),_("ul",[_("li",[v._v("对声音进行量化，即采样，常见的采样率有 48000/s、32000/s、16000/s、8000/s，采样率越高，还原度越高")]),v._v(" "),_("li",[v._v("拿到采样结果再转为二进制格式，采样一般是十进制，最后得到二进制方波")])]),v._v(" "),_("h3",{attrs:{id:"音频原始数据格式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音频原始数据格式"}},[v._v("#")]),v._v(" 音频原始数据格式")]),v._v(" "),_("ul",[_("li",[v._v("PCM （纯粹的原始数据）")]),v._v(" "),_("li",[v._v("WAV （在 PCM 上加了些基本的头信息，便于播放器识别）\n"),_("ul",[_("li",[v._v("头信息包含了 WAV 的标识，也包含了采样大小、采样率、声道数等信息，也就是说可以通过头信息得到对应文件的信息")])])]),v._v(" "),_("li",[v._v("量化的基本概念\n"),_("ul",[_("li",[v._v("采样大小：一个采样用多少 bit 存放，常用的是 16bit")]),v._v(" "),_("li",[v._v("采样率：采样频率 8k、16k、32k、44.1k、48k")]),v._v(" "),_("li",[v._v("声道数：单声道、双声道、多声道（立体声）")])])]),v._v(" "),_("li",[v._v("码率计算：\n"),_("ul",[_("li",[v._v("一个 PCM 音频流的码率计算 = 采样率 * 采样大小 * 声道数")]),v._v(" "),_("li",[v._v("例子：采样率为 44.1KHz，采样大小为 16bit，双声道的 PCM 编码的 WAV 文件，它的码率为 44.1K * 16 * 2 = 1411.2Kb/s")])])])]),v._v(" "),_("h3",{attrs:{id:"音频数据的流转"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音频数据的流转"}},[v._v("#")]),v._v(" 音频数据的流转")]),v._v(" "),_("ul",[_("li",[v._v("PCM（采集到的原始数据，即数字信号）==> aac/mp3（编码器，即得到压缩后的数据）==> mp4/flv（多媒体文件，格式）")]),v._v(" "),_("li",[v._v("以上步骤，可以反过来，即从一个多媒体文件解析成原始数据")])]),v._v(" "),_("h3",{attrs:{id:"音频采集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音频采集"}},[v._v("#")]),v._v(" 音频采集")]),v._v(" "),_("ul",[_("li",[v._v("各个平台都有对应的 API，如 Android、iOS、Windows，并且每个平台都有多套的 API")]),v._v(" "),_("li",[v._v("而 FFmpeg 封装了各个平台的 API，可以兼容各个平台")]),v._v(" "),_("li",[v._v("通过命令采集\n"),_("ul",[_("li",[v._v("ffmpeg -f avfoundation -i :0 out.wav（注意这个 avfoundation 和 :0，是 Mac 平台下的 API，如果是其他平台则需要使用其他平台的 API，可到官网搜索）")]),v._v(" "),_("li",[v._v("ffplay out.wav")])])])]),v._v(" "),_("h3",{attrs:{id:"音频压缩"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音频压缩"}},[v._v("#")]),v._v(" 音频压缩")]),v._v(" "),_("ul",[_("li",[v._v("压缩的两个极端：将数据压缩的越小越好，压缩的速度越快越好")]),v._v(" "),_("li",[v._v("音频压缩技术是在保证信号在听觉方面不产生失真的前提下，对音频数据信号进行尽可能大的压缩")]),v._v(" "),_("li",[v._v("压缩的主要方法是去除采集到的音频冗余信息，所谓冗余信息包括人耳听觉范围外的音频信号以及被屏蔽掉的音频信息")]),v._v(" "),_("li",[v._v("有损压缩：还原不到原始数据\n"),_("ul",[_("li",[v._v("消除冗余信息，如人类听觉范围在：20Hz —— 20kHz 之间，就可以把这范围外的去除掉")]),v._v(" "),_("li",[v._v("遮蔽掉的信息（时域转频域变换器，生成多种频段的数据，根据频段去屏蔽）\n"),_("ul",[_("li",[v._v("频域遮蔽，比如声音中包含了脚步声、汽车声等，这些是我们不关心的，可以去除掉")]),v._v(" "),_("li",[v._v("时域遮蔽，同个时间段内，声音大的会把声音小的给遮蔽掉")])])])])]),v._v(" "),_("li",[v._v("无损压缩：数据压缩后，通过解码可以还原为原来的信息\n"),_("ul",[_("li",[v._v("熵编码\n"),_("ul",[_("li",[v._v("哈夫曼编码")]),v._v(" "),_("li",[v._v("算术编码（基于香农编码）")]),v._v(" "),_("li",[v._v("香农编码")])])]),v._v(" "),_("li",[v._v("应用\n"),_("ul",[_("li",[v._v("zip")]),v._v(" "),_("li",[v._v("rar")]),v._v(" "),_("li",[v._v("zz")]),v._v(" "),_("li",[v._v("7z")])])])])])]),v._v(" "),_("h3",{attrs:{id:"音频编码器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#音频编码器"}},[v._v("#")]),v._v(" 音频编码器")]),v._v(" "),_("ul",[_("li",[v._v("音频编码过程：时域转频域变换（屏蔽信息） ==> 心理声学模型（消除冗余信息） ==> 量化编码（熵编码） ==> 比特流格式化 ==> 比特流")]),v._v(" "),_("li",[v._v("常见的音频编码器\n"),_("ul",[_("li",[v._v("常见的音频编码器包括 OPUS、AAC、Ogg、Speex、iLBC、AMR、G.711 等")]),v._v(" "),_("li",[v._v("其中，AAC 在直播系统中应用的比较广泛，OPUS 是比较新的音频编码器，WebRTC 默认使用 OPUS，固话一般用的是 G.711 系列")]),v._v(" "),_("li",[v._v("网上评测结果：OPUS > AAC > Ogg\n"),_("ul",[_("li",[v._v("音频编码质量，OPUS 最好")]),v._v(" "),_("li",[v._v("音频编码码率，OPUS 延迟低，而 AAC、MP3 延迟比较大，适合用于有一定延迟的直播")])])])])]),v._v(" "),_("li",[v._v("AAC 编码器介绍\n"),_("ul",[_("li",[v._v("AAC（Advanced Audio Coding）由 Fraunhofer IIS、杜比实验室、AT&T、Sony 等公司共同开发，目的是取代 MP3 格式")]),v._v(" "),_("li",[v._v("最开始是基于 MPEG-2 的音频编码技术，MPEG-4 标准出现后，AAC 重新集成了其特性，加入了 SBR 技术和 PS 技术")]),v._v(" "),_("li",[v._v("目前常用的规格有 AAC LC（常用）、AAC HE V2（常用）、AAC HE V1")]),v._v(" "),_("li",[v._v("AAC 规格\n"),_("ul",[_("li",[v._v("AAC LC + SBR = AAC HE V1")]),v._v(" "),_("li",[v._v("AAC HE V1 + PS = AAC HE V2")])])]),v._v(" "),_("li",[v._v("AAC 规格描述\n"),_("ul",[_("li",[v._v("AAC LC（Low Complexity）低复杂度规格，码流是 128k，音质好")]),v._v(" "),_("li",[v._v("AAC HE V1 等于 AAC LC + SBR（Spectral Band Replication），其核心思想是按频谱保存，低频编码保存主要成分，高频单独放大编码保存音质，码流在 64k 左右")]),v._v(" "),_("li",[v._v("AAC HE V2 等于 AAC LC + SBR + PS （Parametric Stereo），其核心思想是双声道中的声音存在某种相似性，只需要存储一个声音的全部信息，然后花很少的字节用参数描述另一个声道和它不同的地方")])])]),v._v(" "),_("li",[v._v("AAC 格式\n"),_("ul",[_("li",[v._v("ADIF（Audio Data Interchange Format）这种格式的特征是可以确定的找到这个音频数据的开始，只能从头开始解码，不能在音频数据流中间开始，这种格式常用在磁盘文件中")]),v._v(" "),_("li",[v._v("ADTS（Audio Data Transport Stream）这种格式的特征是每一帧都有一个同步字，所以可以在音频流的任何位置开始解码，它类似于数据流格式，这种格式会比 ADIF 的数据大，因为它相当于在每个音频帧前面加了一个头信息\n"),_("ul",[_("li",[v._v("ADTS 格式：http://www.p23.nl/projects/aac-header，头信息中包含了编码信息")])])])])]),v._v(" "),_("li",[v._v("ffmpeg 生成 AAC 文件\n"),_("ul",[_("li",[v._v("ffmpeg -i xxx.mp4 -vn -c:a libfdk_aac -ar 44100 -channels 2 -profile:a aache_v2 xxx.aac")])])])])]),v._v(" "),_("li",[v._v("音频重采样\n"),_("ul",[_("li",[v._v("将音频三元组（采样率、采样大小和通道数）的值转成另外一组值就是重采样，只要其中一个值发生变化都是重采样，如将 44100/16/2 转成 48000/16/2")]),v._v(" "),_("li",[v._v("为什么需要重采样？\n"),_("ul",[_("li",[v._v("从设备采集的音频数据与编码器要求的数据不一致")]),v._v(" "),_("li",[v._v("扬声器要求的音频数据与要播放的音频数据不一致")]),v._v(" "),_("li",[v._v("更方便运算，如回音消除时单声道比多声道更容易处理")])])]),v._v(" "),_("li",[v._v("如何知道各个平台的参数？\n"),_("ul",[_("li",[v._v("要了解音频设备的参数")]),v._v(" "),_("li",[v._v("查看 ffmpeg 源码")])])]),v._v(" "),_("li",[v._v("ffmpeg 重采样的步骤\n"),_("ul",[_("li",[v._v("创建重采样上下文")]),v._v(" "),_("li",[v._v("设置参数")]),v._v(" "),_("li",[v._v("初始化重采样")]),v._v(" "),_("li",[v._v("进行重采样")]),v._v(" "),_("li",[v._v("涉及到的 API\n"),_("ul",[_("li",[v._v("swr_alloc_set_opts")]),v._v(" "),_("li",[v._v("swr_init")]),v._v(" "),_("li",[v._v("swr_convert")]),v._v(" "),_("li",[v._v("swr_free")])])])])])])])]),v._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[v._v("作者：chenjie "),_("br"),v._v("\n链接：https://webchenjie.cn "),_("br"),v._v("\n来源：ChenJieBlog")])])])}),[],!1,null,null,null);_.default=a.exports}}]);